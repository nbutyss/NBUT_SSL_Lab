box={}

Iflag={
	a=0,
	b=0
}

function theShort(xmin,xmax,ymin,ymax)
	local between = function(a,min,max)
			if a > min and a < max then
				return true
			end
			return false
	end
    local num =-1
    local j = 0
    for i=0,param.maxPlayer-1 do
		if enemy.valid(i) and between(enemy.posX(i),xmin,xmax) and between(enemy.posY(i),ymin,ymax) then
			if(j==0) then
				box[1]=i
				j=j+1
			elseif(j==1) then
			    box[2]=i
			    j=j+1
			elseif(j==2) then
			    box[3]=i
			    j=j+1
			elseif(j==3) then
			    box[4]=i
			    j=j+1
			elseif(j==4) then 
				box[5]=i
				j=j+1
			else
			    box[6]=i
			    j=j+1	
			end    
		end
	end
	local mid
	for i=1,j do
	    for z=1 ,j-i do
	        if (enemy.pos(box[z])-ball.pos()):mod()>(enemy.pos(box[z+1])-ball.pos()):mod() then
                mid=box[z]
                box[z]=box[z+1]	
                box[z+1]=mid
            end
        end
    end
end

function lorR()
	if ball.posY()>0 then 
		Iflag.b=1
	else
		Iflag.b=0
	end	
		return true
end	

function zero()
	Iflag.a=0
end

function defCorner(n,dist)--0,1,2,3...
	local ourGoal = CGeoPoint(-4500,0)
	local between = function(a,min,max)
			if a > min and a < max then
				return true
			end
			return false
	end
	local idist = dist or 700 
	local p =ball.pos()
	-- local iflag = flag.allow_dss + flag.dodge_ball
	local j=0
    local ipos =function(runner)
    	if ball.velMod()>650 then
    		Iflag.a=1
    	end	
    	if Iflag.a==0 and n==5 then
    		if Iflag.b==1 then
    		   p=CGeoPoint:new_local(-2800,1700)
    		else 
    		   p=CGeoPoint:new_local(-2800,-1700)
            end
            return p
        end
    	j=0
        for i=0,param.maxPlayer-1 do
		    if enemy.valid(i) and between(enemy.posX(i),-4500,0) and between(enemy.posY(i),-3000,3000) then
	            j=j+1
		    end
	    end 
	    if (j==0 or j==1) then
	    	p = ourGoal +Utils.Polar2Vector(2500,(ball.pos()-ourGoal):dir()-math.pi*n/20)
	    else
		    if n==5 then
		    	num=box[2]
		    end	
		    --debugEngine:gui_debug_msg(CGeoPoint(-2000,n*200),j .. "|||" .. n)
		    if j==2 and n~=5 then
	            if Iflag.b==1 and n==4 then
	            	p = CGeoPoint:new_local(-3400,0)
	            	--debugEngine:gui_debug_msg(CGeoPoint(0,n*200),"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!33") 
	            else
	   	            p = CGeoPoint:new_local(-4100+(n-3)*220,1150)
	   	            --debugEngine:gui_debug_msg(CGeoPoint(0,n*200),"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!44") 
	   	        end 
	   	    end
	   	    if n==4 then 
	   	        num=box[3] 	                  
	            p=ourGoal+Utils.Polar2Vector(350,(enemy.pos(box[3])-ourGoal):dir())
	            if p:x()~=0 then
	  	            p=CGeoPoint:new_local(-3400,p:y())
	  	        end
            end
	   	    if (j==3 or j==4 or j==5)and n==3 then
	            num=box[3]       
	   	        if Iflag.b==1 then
	        	    if(enemy.posY(num)<-1100 and enemy.posX(num)<-3500) then
	                    local x=((1100+ball.posY())*(enemy.posX(num)-ball.posX()))/(-enemy.posY(num)+ball.posY())
	                    p=CGeoPoint:new_local(x+ball.posX(),-1150)
	                    if p:x()<-4300 then
	                    p =  CGeoPoint:new_local(-4300,-1150)
	                    end
	                    if(enemy.posX(num)<ball.posX()) then
	  	                    p=CGeoPoint:new_local(-4000,-1100)
	  	                    if p:y()~=0 then
	  	                       p=CGeoPoint:new_local(p:x(),-1100)
	  	                    end
	                    end	
	                    debugEngine:gui_debug_msg(CGeoPoint(0,n*200),"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!77")     
	                else
	                    p = CGeoPoint:new_local(-4100+(n-3)*220,-1150)
	                    debugEngine:gui_debug_msg(CGeoPoint(0,n*200),"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!88")     	
	                end 
	            elseif	Iflag.b==0 then
	        	    if(enemy.posY(num)>1100 and enemy.posX(num)<-3500) then
	        	        local x=((1100-ball.posY())*(enemy.posX(num)-ball.posX()))/(enemy.posY(num)-ball.posY())
	                    p=CGeoPoint:new_local(x+ball.posX(),1150)
	                    if p:x()<-4300 then
	                    p =  CGeoPoint:new_local(-4300,1150)
	                    end
	                    if(enemy.posX(num)<ball.posX()) then
	                    	p=ourGoal+Utils.Polar2Vector(350,(enemy.pos(box[3])-ourGoal):dir())
	                    	if p:y()~=0 then
	  	                       p=CGeoPoint:new_local(p:x(),1100)
	  	                    end
	                    end	
	                    debugEngine:gui_debug_msg(CGeoPoint(0,n*200),"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!22") 
	                else
	                    p = CGeoPoint:new_local(-4100+(n-3)*220,1150) 
	                    debugEngine:gui_debug_msg(CGeoPoint(0,n*200),"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11")    	
	                end  	
	            end
	        end        
	    	if Iflag.b==1 and n==5 then
		        if(enemy.pos(num)-ball.pos()):mod()>600 and enemy.posX(num)<0 then
	                if( enemy.posX(num)>-3500 and enemy.posX(num)<-3700)then
	                	p = CGeoPoint:new_local(enemy.posX(num),enemy.posY(num)+200)
	                else
	                    tar = (ball.pos()-enemy.pos(num)):dir()
			            p = enemy.pos(num)+Utils.Polar2Vector(300,tar)	
			        end
			    else
			    	tar = (ourGoal-ball.pos()):dir()+(math.pi/5)*n
			        p = ball.pos() + Utils.Polar2Vector(idist,tar)
			    end	   
			elseif Iflag.b==0 and n==5  then
			    if(enemy.pos(num)-ball.pos()):mod()>600 and enemy.posX(num)<0 then
	                if( enemy.posX(num)>-3500 and enemy.posX(num)<-3700)then
	                	p = CGeoPoint:new_local(enemy.posX(num),enemy.posY(num)-200)
	                else    
	                	tar = (ball.pos()-enemy.pos(num)):dir()
			            p = enemy.pos(num) + Utils.Polar2Vector(300,tar)
			        end    
			    else
			    	tar = (ourGoal-ball.pos()):dir()-(math.pi/5)*n
			        p = ball.pos() + Utils.Polar2Vector(idist,tar)
			    end       	  
	        end
	    end
        return p 
    end
    local idir =function(runner)
        local res 
        res = (ball.pos() - player.pos(runner)):dir()
		return res
    end
	local mexe, mpos = GoCmuRush{pos = ipos, dir = idir, flag = iflag}
	return {mexe, mpos}
end

function rchangego2Pos(x,y)
	local place =CGeoPoint(x,y)
	local ipos = place + Utils.Polar2Vector(200,(ball.pos() - place):dir()+math.pi/6)
		--[[local res
		res = place + Utils.Polar2Vector(200,(ball.pos() - place):dir()+math.pi/6)
		return res
	end--]]
	local idir = (ball.pos() - place):dir()-math.pi/6
		--[[local res
		res = (ball.pos() - player.pos(runner)):dir()-math.pi/6
		return res
	end--]]

	local mexe, mpos = GoCmuRush{pos = ipos, dir = idir}
	return {mexe, mpos}
end